dim(us.lonlat.noNA)
dim(canusmex.lonlat)
dist.mat[,1:10]
count.zero.per.col[1:10]
canusmex.lonlat[7,]
dist.mat[,7]
summary(dist.mat[,7])
dim(is.zero)
is.zero[,7]
summary(dist.mat[,7])
tmp <- !is.na(dist.mat)
summary(tmp[,7])
summary(is.zero[,7])
count.zero.per.col[7]
rm(list=ls())
ls()
q()
y
library("maps")
 ## Get maps of Canada, USA, Mexico.
  canusmex <- map("world", region=c("Canada", "USA", "Mexico"), exact=F,
                  resolution=0, plot=F)
  canusmex.lonlat <- cbind(canusmex$x, canusmex$y)
  rm(canusmex)

  ## Get map of just USA.
  us <- map("world", region="USA", exact=F, resolution=0, plot=F)
  us.lonlat <- cbind(us$x, us$y)
  rm(us)

  ## See if we can find which ones are duplicated.  These are the
  ## borders of the US, and we'll want to delete them.
  ## Remove NAs from us.lonlat.
  us.lonlat.noNA <- na.omit(us.lonlat)
  rm (us.lonlat)


  ## Find matrix which has the distances between all the points.  We
  ## look at the subset of the matrix giving the distances between the
  ## US boundaries (us.lonlat.noNA) and the boundary lines for Canada,
  ## US, and Mexico.
  dist.mat <- as.matrix(dist(rbind(us.lonlat.noNA, canusmex.lonlat)))[1:nrow(us.lonlat.noNA), (nrow(us.lonlat.noNA)+1):(nrow(us.lonlat.noNA)+nrow(canusmex.lonlat))]

  ## Identify the non-duplicates (points that define borders of Canada
  ## and Mexico, but not the US) by checking each column to see if it is
  ## non-zero.  The duplicates may be excluded in some cases (they may
  ## be obtained by adding on state boundaries), but the non-duplicates
  ## are crucial to define the outlines of Canada and Mexico.
  is.zero <- (dist.mat==0) & (!is.na(dist.mat))
  count.zero.per.col <- apply(is.zero, 2, sum)
  indic.non.dupl <- count.zero.per.col == 0

is.zero[1:10]
is.zero[1:15]
is.zero[1:20]
class(is.zero)
count.zero.per.col[1:10]
indic.non.dupl[1:10]
dim(is.zero)
dim(us.lonlat.noNA)
dim(canusmex.lonlat)
dim(dist.mat)
dist.mat[1:15,1:10]
count.zero.per.col[1:10]
indic.non.dupl[1:10]
is.zero[1:15, 1:10]
count.zero.per.col[1:10]
indic.non.dupl[1:10]
dim(dist.mat)
canusmex.lonlat[1:10,]
 ## Loop through the vector indic.non.dupl, which shows which points
  ## are duplicates.  (The first point is a special case, so we do
  ## that outside the loop to make the control logic in the loop
  ## easier.)  All points that are non-duplicates will be included in
  ## the new map.  Some points which are duplicates will be included
  ## if they are adjacent to non-duplicate points.  This is necessary
  ## to retain the connecting line segments between the US border
  ## and the Canadian/Mexican borders.
  {
    if (indic.non.dupl[1])
      new.map <- canusmex.lonlat[1,]
    else
      new.map <- NULL
  }
  for (i in 2:length(indic.non.dupl)){
    ## If point i is not a duplicate, it will be included in the new
    ## map.  In addition, we test the previous point.  If the previous
    ## point WAS a duplicate, then we need to add a row of NAs, this
    ## previous point (i-1), and point i to the map.  This allows for
    ## the inclusion of the line segment between the US and
    ## Canadian/Mexican borders.
    if (indic.non.dupl[i]){
      if (indic.non.dupl[i-1])
        new.map <- rbind(new.map, canusmex.lonlat[i,])
      else{
        new.map <- rbind(new.map, c(NA, NA))
        new.map <- rbind(new.map, canusmex.lonlat[(i-1):i,])
      }
    }

    ## If point i is a duplicate, then check the previous point (i-1).
    ## If the previous point was not a duplicate, we include this
    ## point i.  This allows for the inclusion of the line segment
    ## between the US and Canadian/Mexican borders.
    else{
      if ( indic.non.dupl[i-1] )
        new.map <- rbind(new.map, canusmex.lonlat[i,])
    }
  }

new.map[1:10,]
rm(list=ls())
ls()
q()
y
 ## Get maps of Canada, USA, Mexico.
  canusmex <- map("world", region=c("Canada", "USA", "Mexico"), exact=F,
                  resolution=0, plot=F)
  canusmex.lonlat <- cbind(canusmex$x, canusmex$y)
  rm(canusmex)

  ## Get map of just USA.
  us <- map("world", region="USA", exact=F, resolution=0, plot=F)
  us.lonlat <- cbind(us$x, us$y)
  rm(us)

  ## See if we can find which ones are duplicated.  These are the
  ## borders of the US, and we'll want to delete them.
  ## Remove NAs from us.lonlat.
  us.lonlat.noNA <- na.omit(us.lonlat)
  rm (us.lonlat)


  ## Find matrix which has the distances between all the points.  We
  ## look at the subset of the matrix giving the distances between the
  ## US boundaries (us.lonlat.noNA) and the boundary lines for Canada,
  ## US, and Mexico.
  dist.mat <- as.matrix(dist(rbind(us.lonlat.noNA, canusmex.lonlat)))[1:nrow(us.lonlat.noNA), (nrow(us.lonlat.noNA)+1):(nrow(us.lonlat.noNA)+nrow(canusmex.lonlat))]

  ## Identify the non-duplicates (points that define borders of Canada
  ## and Mexico, but not the US) by checking each column to see if it is
  ## non-zero.  The duplicates may be excluded in some cases (they may
  ## be obtained by adding on state boundaries), but the non-duplicates
  ## are crucial to define the outlines of Canada and Mexico.
  is.zero <- (dist.mat==0) & (!is.na(dist.mat))
  count.zero.per.col <- apply(is.zero, 2, sum)
  indic.non.dupl <- count.zero.per.col == 0

library("maps")
 ## Get maps of Canada, USA, Mexico.
  canusmex <- map("world", region=c("Canada", "USA", "Mexico"), exact=F,
                  resolution=0, plot=F)
  canusmex.lonlat <- cbind(canusmex$x, canusmex$y)
  rm(canusmex)

  ## Get map of just USA.
  us <- map("world", region="USA", exact=F, resolution=0, plot=F)
  us.lonlat <- cbind(us$x, us$y)
  rm(us)

  ## See if we can find which ones are duplicated.  These are the
  ## borders of the US, and we'll want to delete them.
  ## Remove NAs from us.lonlat.
  us.lonlat.noNA <- na.omit(us.lonlat)
  rm (us.lonlat)


  ## Find matrix which has the distances between all the points.  We
  ## look at the subset of the matrix giving the distances between the
  ## US boundaries (us.lonlat.noNA) and the boundary lines for Canada,
  ## US, and Mexico.
  dist.mat <- as.matrix(dist(rbind(us.lonlat.noNA, canusmex.lonlat)))[1:nrow(us.lonlat.noNA), (nrow(us.lonlat.noNA)+1):(nrow(us.lonlat.noNA)+nrow(canusmex.lonlat))]

  ## Identify the non-duplicates (points that define borders of Canada
  ## and Mexico, but not the US) by checking each column to see if it is
  ## non-zero.  The duplicates may be excluded in some cases (they may
  ## be obtained by adding on state boundaries), but the non-duplicates
  ## are crucial to define the outlines of Canada and Mexico.
  is.zero <- (dist.mat==0) & (!is.na(dist.mat))
  count.zero.per.col <- apply(is.zero, 2, sum)
  indic.non.dupl <- count.zero.per.col == 0



  ## Loop through the vector indic.non.dupl, which shows which points
  ## are duplicates.  (The first point is a special case, so we do
  ## that outside the loop to make the control logic in the loop
  ## easier.)  All points that are non-duplicates will be included in
  ## the new map.  Some points which are duplicates will be included
  ## if they are adjacent to non-duplicate points.  This is necessary
  ## to retain the connecting line segments between the US border
  ## and the Canadian/Mexican borders.
  {
    if (indic.non.dupl[1])
      new.map <- canusmex.lonlat[1,]
    else
      new.map <- NULL
  }
  for (i in 2:length(indic.non.dupl)){
    ## If point i is not a duplicate, it will be included in the new
    ## map.  In addition, we test the previous point.  If the previous
    ## point WAS a duplicate, then we need to add a row of NAs, this
    ## previous point (i-1), and point i to the map.  This allows for
    ## the inclusion of the line segment between the US and
    ## Canadian/Mexican borders.
    if (indic.non.dupl[i]){
      if (indic.non.dupl[i-1])
        new.map <- rbind(new.map, canusmex.lonlat[i,])
      else{
        new.map <- rbind(new.map, c(NA, NA))
        new.map <- rbind(new.map, canusmex.lonlat[(i-1):i,])
      }
    }

    ## If point i is a duplicate, then check the previous point (i-1).
    ## If the previous point was not a duplicate, we include this
    ## point i.  This allows for the inclusion of the line segment
    ## between the US and Canadian/Mexican borders.
    else{
      if ( indic.non.dupl[i-1] )
        new.map <- rbind(new.map, canusmex.lonlat[i,])
    }
  }

count.zero.per.col[1:10]
indic.non.dupl[1:10]
canusmex.lonlat[1:10,]
new.map[1:5,]
plot(c(-140, -125), c(50, 66), type="n")
points(x=-133.3664, y=58.42416)
map("world", add=T)
plot(c(-145, -120), c(45, 70), type="n")
points(x=-133.3664, y=58.42416)
map("world", add=T)
 points(x=-130.0050, y=55.92165, col="blue")
 points(x=-130.0131, y=55.91169, col="cyan")
plot(new.map)
plot(new.map, type="l")
summary(new.map[,1])
new.map[new.map[,1] > 150,]
new.map[new.map[,1] > 150 & (!is.na(new.map[,1])),]
plot(c(160, 179.8), c(42, 62), type="n")
points(new.map[new.map[,1] > 150 & (!is.na(new.map[,1])),])
plot(new.map[new.map[,1] < 150,], type="l")
plot(new.map[new.map[,1] < 0,], type="l")
plot(new.map[(new.map[,1] < 0) & (new.map[,1] > -145),], type="l")
old.new.map <- new.map
warnings()
lines(new.map, col="cyan")
dim(old.new.map)
dim(new.map)
rm(list=ls())
ls()
q()
y
